// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: messages.proto

package core

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type SegmentEvent_Type int32

const (
	SegmentEvent_CREATED SegmentEvent_Type = 0
	SegmentEvent_REMOVED SegmentEvent_Type = 1
)

var SegmentEvent_Type_name = map[int32]string{
	0: "CREATED",
	1: "REMOVED",
}

var SegmentEvent_Type_value = map[string]int32{
	"CREATED": 0,
	"REMOVED": 1,
}

func (x SegmentEvent_Type) String() string {
	return proto.EnumName(SegmentEvent_Type_name, int32(x))
}

func (SegmentEvent_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1, 0}
}

type Segment struct {
	Region      string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Topic       string `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition   uint32 `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Level       uint32 `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	StartOffset uint64 `protobuf:"varint,5,opt,name=startOffset,proto3" json:"startOffset,omitempty"`
	EndOffset   uint64 `protobuf:"varint,6,opt,name=endOffset,proto3" json:"endOffset,omitempty"`
}

func (m *Segment) Reset()         { *m = Segment{} }
func (m *Segment) String() string { return proto.CompactTextString(m) }
func (*Segment) ProtoMessage()    {}
func (*Segment) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}
func (m *Segment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segment.Unmarshal(m, b)
}
func (m *Segment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segment.Marshal(b, m, deterministic)
}
func (m *Segment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segment.Merge(m, src)
}
func (m *Segment) XXX_Size() int {
	return xxx_messageInfo_Segment.Size(m)
}
func (m *Segment) XXX_DiscardUnknown() {
	xxx_messageInfo_Segment.DiscardUnknown(m)
}

var xxx_messageInfo_Segment proto.InternalMessageInfo

type SegmentEvent struct {
	Type        SegmentEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=core.SegmentEvent_Type" json:"type,omitempty"`
	Timestamp   time.Time         `protobuf:"bytes,2,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	Segment     Segment           `protobuf:"bytes,3,opt,name=segment,proto3" json:"segment"`
	SegmentSize uint64            `protobuf:"varint,4,opt,name=segmentSize,proto3" json:"segmentSize,omitempty"`
}

func (m *SegmentEvent) Reset()         { *m = SegmentEvent{} }
func (m *SegmentEvent) String() string { return proto.CompactTextString(m) }
func (*SegmentEvent) ProtoMessage()    {}
func (*SegmentEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}
func (m *SegmentEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentEvent.Unmarshal(m, b)
}
func (m *SegmentEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentEvent.Marshal(b, m, deterministic)
}
func (m *SegmentEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentEvent.Merge(m, src)
}
func (m *SegmentEvent) XXX_Size() int {
	return xxx_messageInfo_SegmentEvent.Size(m)
}
func (m *SegmentEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentEvent proto.InternalMessageInfo

type Checkpoint struct {
	Region    string    `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Topic     string    `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition uint32    `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset    uint64    `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp time.Time `protobuf:"bytes,5,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}
func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

type SegmentMetadata struct {
	Region           string    `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Topic            string    `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition        uint32    `protobuf:"varint,3,opt,name=partition,proto3" json:"partition,omitempty"`
	Level            uint32    `protobuf:"varint,4,opt,name=level,proto3" json:"level,omitempty"`
	StartOffset      uint64    `protobuf:"varint,5,opt,name=startOffset,proto3" json:"startOffset,omitempty"`
	EndOffset        uint64    `protobuf:"varint,6,opt,name=endOffset,proto3" json:"endOffset,omitempty"`
	MessageCount     uint64    `protobuf:"varint,7,opt,name=messageCount,proto3" json:"messageCount,omitempty"`
	CreatedTimestamp time.Time `protobuf:"bytes,8,opt,name=createdTimestamp,proto3,stdtime" json:"createdTimestamp"`
}

func (m *SegmentMetadata) Reset()         { *m = SegmentMetadata{} }
func (m *SegmentMetadata) String() string { return proto.CompactTextString(m) }
func (*SegmentMetadata) ProtoMessage()    {}
func (*SegmentMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}
func (m *SegmentMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentMetadata.Unmarshal(m, b)
}
func (m *SegmentMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentMetadata.Marshal(b, m, deterministic)
}
func (m *SegmentMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentMetadata.Merge(m, src)
}
func (m *SegmentMetadata) XXX_Size() int {
	return xxx_messageInfo_SegmentMetadata.Size(m)
}
func (m *SegmentMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentMetadata proto.InternalMessageInfo

type Message struct {
	Key       []byte            `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value     []byte            `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Offset    uint64            `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Timestamp time.Time         `protobuf:"bytes,4,opt,name=timestamp,proto3,stdtime" json:"timestamp"`
	Headers   []*Message_Header `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type Message_Header struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Message_Header) Reset()         { *m = Message_Header{} }
func (m *Message_Header) String() string { return proto.CompactTextString(m) }
func (*Message_Header) ProtoMessage()    {}
func (*Message_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4, 0}
}
func (m *Message_Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message_Header.Unmarshal(m, b)
}
func (m *Message_Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message_Header.Marshal(b, m, deterministic)
}
func (m *Message_Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message_Header.Merge(m, src)
}
func (m *Message_Header) XXX_Size() int {
	return xxx_messageInfo_Message_Header.Size(m)
}
func (m *Message_Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Message_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Message_Header proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("core.SegmentEvent_Type", SegmentEvent_Type_name, SegmentEvent_Type_value)
	proto.RegisterType((*Segment)(nil), "core.Segment")
	proto.RegisterType((*SegmentEvent)(nil), "core.SegmentEvent")
	proto.RegisterType((*Checkpoint)(nil), "core.Checkpoint")
	proto.RegisterType((*SegmentMetadata)(nil), "core.SegmentMetadata")
	proto.RegisterType((*Message)(nil), "core.Message")
	proto.RegisterType((*Message_Header)(nil), "core.Message.Header")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x53, 0x4d, 0x6e, 0xda, 0x40,
	0x14, 0xb6, 0x83, 0xc1, 0xe1, 0x41, 0x52, 0x34, 0x8a, 0x52, 0x0b, 0x55, 0x60, 0x79, 0x85, 0x54,
	0x65, 0xa8, 0xe8, 0x09, 0x0a, 0x41, 0xea, 0x06, 0xa5, 0x9a, 0xa0, 0xee, 0x07, 0x78, 0x18, 0x2b,
	0xc0, 0x58, 0xf6, 0x80, 0x44, 0x4f, 0x91, 0x6b, 0x54, 0xdd, 0xf6, 0x10, 0x59, 0x76, 0xd9, 0x55,
	0xff, 0x38, 0x40, 0xa5, 0x9e, 0xa0, 0x9a, 0x19, 0x13, 0x83, 0xaa, 0x56, 0x6a, 0xd4, 0x45, 0x77,
	0xf3, 0x7d, 0xef, 0x7b, 0x9e, 0xef, 0x7d, 0xf3, 0x0c, 0xa7, 0x0b, 0x4c, 0x53, 0x1e, 0x62, 0x4a,
	0xe3, 0x44, 0x48, 0x41, 0x9c, 0xb1, 0x48, 0xb0, 0xde, 0x0c, 0x85, 0x08, 0xe7, 0xd8, 0xd6, 0xdc,
	0x68, 0x35, 0x6d, 0xcb, 0x68, 0x81, 0xa9, 0xe4, 0x8b, 0xd8, 0xc8, 0xea, 0x17, 0x61, 0x24, 0x67,
	0xab, 0x11, 0x1d, 0x8b, 0x45, 0x3b, 0x14, 0xa1, 0xc8, 0x95, 0x0a, 0x69, 0xa0, 0x4f, 0x46, 0x1e,
	0xbc, 0xb3, 0xc1, 0xbd, 0xc6, 0x70, 0x81, 0x4b, 0x49, 0xce, 0xa1, 0x94, 0x60, 0x18, 0x89, 0xa5,
	0x67, 0xfb, 0x76, 0xab, 0xcc, 0x32, 0x44, 0xce, 0xa0, 0x28, 0x45, 0x1c, 0x8d, 0xbd, 0x23, 0x4d,
	0x1b, 0x40, 0x9e, 0x40, 0x39, 0xe6, 0x89, 0x8c, 0xa4, 0x6a, 0x28, 0xf8, 0x76, 0xeb, 0x84, 0xe5,
	0x84, 0xea, 0x99, 0xe3, 0x1a, 0xe7, 0x9e, 0xa3, 0x2b, 0x06, 0x10, 0x1f, 0x2a, 0xa9, 0xe4, 0x89,
	0xbc, 0x9a, 0x4e, 0x53, 0x94, 0x5e, 0xd1, 0xb7, 0x5b, 0x0e, 0xdb, 0xa7, 0xd4, 0x57, 0x71, 0x39,
	0xc9, 0xea, 0x25, 0x5d, 0xcf, 0x89, 0xe0, 0x87, 0x0d, 0xd5, 0xcc, 0x6d, 0x7f, 0xad, 0x2c, 0x3f,
	0x05, 0x47, 0x6e, 0x62, 0xd4, 0x86, 0x4f, 0x3b, 0x8f, 0xa9, 0xca, 0x88, 0xee, 0x2b, 0xe8, 0x70,
	0x13, 0x23, 0xd3, 0x22, 0xd2, 0x85, 0xf2, 0x7d, 0x5a, 0x7a, 0x96, 0x4a, 0xa7, 0x4e, 0x4d, 0x9e,
	0x74, 0x97, 0x12, 0x1d, 0xee, 0x14, 0xdd, 0xe3, 0xbb, 0x4f, 0x4d, 0xeb, 0xf6, 0x73, 0xd3, 0x66,
	0x79, 0x1b, 0xb9, 0x00, 0x37, 0x35, 0x9f, 0xd7, 0x33, 0x57, 0x3a, 0x27, 0x07, 0x77, 0x76, 0x1d,
	0xd5, 0xc4, 0x76, 0x1a, 0x3d, 0xb0, 0x39, 0x5e, 0x47, 0x6f, 0x50, 0x87, 0xa1, 0x06, 0xce, 0xa9,
	0xc0, 0x07, 0x47, 0x59, 0x24, 0x15, 0x70, 0x7b, 0xac, 0xff, 0x62, 0xd8, 0xbf, 0xac, 0x59, 0x0a,
	0xb0, 0xfe, 0xe0, 0xea, 0x75, 0xff, 0xb2, 0x66, 0x07, 0xef, 0x6d, 0x80, 0xde, 0x0c, 0xc7, 0x37,
	0xb1, 0x88, 0xfe, 0xf1, 0x2b, 0x9d, 0x43, 0x49, 0x98, 0xa8, 0x8d, 0xb3, 0x0c, 0x1d, 0x26, 0x55,
	0x7c, 0x50, 0x52, 0xc1, 0xdb, 0x23, 0x78, 0x94, 0xa5, 0x32, 0x40, 0xc9, 0x27, 0x5c, 0xf2, 0xff,
	0x7f, 0xc3, 0x48, 0x00, 0xd5, 0xec, 0xbf, 0xeb, 0x89, 0xd5, 0x52, 0x7a, 0xae, 0x16, 0x1c, 0x70,
	0xe4, 0x15, 0xd4, 0xc6, 0x09, 0x72, 0x89, 0x93, 0xfb, 0x08, 0xbc, 0xe3, 0xbf, 0x08, 0xe9, 0x97,
	0xee, 0xe0, 0xbb, 0x0d, 0xee, 0xc0, 0x5c, 0x41, 0x6a, 0x50, 0xb8, 0xc1, 0x8d, 0x0e, 0xa8, 0xca,
	0xd4, 0x51, 0x4d, 0xba, 0xe6, 0xf3, 0x15, 0xea, 0x74, 0xaa, 0xcc, 0x80, 0xbd, 0xb7, 0x2b, 0xfc,
	0xfe, 0xed, 0x9c, 0x87, 0x6d, 0x39, 0x05, 0x77, 0x86, 0x7c, 0x82, 0x49, 0xea, 0x15, 0xfd, 0x42,
	0xab, 0xd2, 0x39, 0x33, 0x5b, 0x9e, 0x79, 0xa4, 0x2f, 0x75, 0x91, 0xed, 0x44, 0xf5, 0x67, 0x50,
	0x32, 0xd4, 0xbe, 0xfb, 0xf2, 0x1f, 0xdc, 0x77, 0xcf, 0xee, 0xbe, 0x36, 0xac, 0x2f, 0xdf, 0x1a,
	0xd6, 0xed, 0xb6, 0x61, 0x7d, 0xd8, 0x36, 0xac, 0x8f, 0xdb, 0x86, 0x35, 0x2a, 0x69, 0x83, 0xcf,
	0x7f, 0x06, 0x00, 0x00, 0xff, 0xff, 0x57, 0x93, 0xf9, 0x31, 0xfc, 0x04, 0x00, 0x00,
}
