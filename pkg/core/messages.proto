// Copyright 2020 CrowdStrike Holdings, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package core;

import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.sizer_all) = false;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_sizecache_all) = false;

message Segment {
    string region = 1;
    string topic = 2;
    uint32 partition = 3;
    uint32 level = 4;
    uint64 startOffset = 5;
    uint64 endOffset = 6;
}

message SegmentEvent {
    enum Type {
        CREATED = 0;
        REMOVED = 1;
    }

    Type type = 1;
    google.protobuf.Timestamp timestamp = 2 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    Segment segment = 3 [(gogoproto.nullable) = false];
    uint64 segmentSize = 4;
}

message Checkpoint {
    string region = 1;
    string topic = 2;
    uint32 partition = 3;
    uint64 offset = 4;
    google.protobuf.Timestamp timestamp = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message SegmentMetadata {
    string region = 1;
    string topic = 2;
    uint32 partition = 3;
    uint32 level = 4;
    uint64 startOffset = 5;
    uint64 endOffset = 6;
    uint64 messageCount = 7;
    google.protobuf.Timestamp createdTimestamp = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message Message {
    message Header {
        string key = 1;
        bytes value = 2;
    }

	bytes key = 1;
    bytes value = 2;
    uint64 offset = 3;
    google.protobuf.Timestamp timestamp = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
	repeated Header headers = 5;
}
